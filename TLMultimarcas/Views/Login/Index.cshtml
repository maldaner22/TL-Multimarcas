@model TLMultimarcas.Models.Usuario
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    <style>
        /*.login {
            position: absolute;
            left: 40%;
            top: 40%;
            border: 1px solid #ccc;
            padding: 10px 10px;
        }

        .field-validation-error {
            color: red;
        }*/

        body {
            background: #0f0c29; /* fallback for old browsers */
            background: -webkit-linear-gradient(to right, #24243e, #302b63, #0f0c29); /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(to right, #24243e, #302b63, #0f0c29); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
            font-family: 'Open Sans', sans-serif;
        }

        .login {
            width: 400px;
            margin: 16px auto;
            font-size: 16px;
        }

            /* Reset top and bottom margins from certain elements */
            .login-header,
            .login p {
                margin-top: 0;
                margin-bottom: 0;
            }

        /* The triangle form is achieved by a CSS hack */
        .login-triangle {
            width: 0;
            margin-right: auto;
            margin-left: auto;
            border: 12px solid transparent;
            border-bottom-color: #0f0c29;
        }

        .login-header {
            background: #0f0c29;
            padding: 20px;
            font-size: 1.4em;
            font-weight: normal;
            text-align: center;
            text-transform: uppercase;
            color: #fff;
        }

        .login-container {
            background: #ebebeb;
            padding: 12px;
        }

        /* Every row inside .login-container is defined with p tags */
        .login p {
            padding: 12px;
        }

        .login input {
            box-sizing: border-box;
            display: block;
            width: 100%;
            border-width: 1px;
            border-style: solid;
            padding: 16px;
            outline: 0;
            font-family: inherit;
            font-size: 0.95em;
        }

            .login input[type="submit"] {
                background: #0f0c29;
                border-color: transparent;
                color: #fff;
                cursor: pointer;
            }

                .login input[type="submit"]:hover {
                    background: #181151;
                }

                /* Buttons' focus effect */
                .login input[type="submit"]:focus {
                    border-color: #181151;
                }
    </style>
</head>
<body>
    @using (Html.BeginForm("Autorizado", "Login", FormMethod.Post))
    {
        <div class="login">
            <div class="login-triangle"></div>

            <h2 class="login-header">Log in</h2>

            <div class="login-container">
                <div class="login-input">
                    @Html.LabelFor(model => model.LoginFuncionario)
                    @Html.EditorFor(model => model.LoginFuncionario, new { htmlAttributes = new { @class = "login input" } })
                    @Html.ValidationMessageFor(model => model.LoginFuncionario)
                </div>
                <div class="login-input">
                    @Html.LabelFor(model => model.SenhaFuncionario)
                    @Html.EditorFor(model => model.SenhaFuncionario, new { htmlAttributes = new { @class = "login input" } })
                    @Html.ValidationMessageFor(model => model.SenhaFuncionario)
                </div>
                @Html.DisplayFor(model => model.LoginErrorMessage)

                <input type="submit" name="name" value="Entrar"/>
            </div>
        </div>
    }
    @*<div id="login-div" class="login">
            @using (Html.BeginForm("Autorizado", "Login", FormMethod.Post))
            {

                <table>
                    <tr>
                        <td></td>
                        <td style="text-decoration:underline">T&L Multimarcas</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.LoginFuncionario)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.LoginFuncionario)
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>@Html.ValidationMessageFor(model => model.LoginFuncionario)</td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.SenhaFuncionario)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SenhaFuncionario)
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>@Html.ValidationMessageFor(model => model.SenhaFuncionario)</td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td>
                            <input type="submit" name="name" value="Login" />
                            <input type="reset" name="name" value="Clear" />
                        </td>
                    </tr>
                </table>
            }
        </div>*@
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
